"""edit teams

Revision ID: d2781f133458
Revises: e0ff669f2e6c
Create Date: 2024-04-26 16:41:25.028048

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = 'd2781f133458'
down_revision: Union[str, None] = 'e0ff669f2e6c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('team', 'opposite',
                    existing_type=sa.VARCHAR(),
                    type_=sa.Integer(),
                    existing_nullable=True)
    op.alter_column('team', 'outside_1',
                    existing_type=sa.VARCHAR(),
                    type_=sa.Integer(),
                    existing_nullable=True)
    op.alter_column('team', 'outside_2',
                    existing_type=sa.VARCHAR(),
                    type_=sa.Integer(),
                    existing_nullable=True)
    op.alter_column('team', 'setter',
                    existing_type=sa.VARCHAR(),
                    type_=sa.Integer(),
                    existing_nullable=True)
    op.alter_column('team', 'middle_1',
                    existing_type=sa.VARCHAR(),
                    type_=sa.Integer(),
                    existing_nullable=True)
    op.alter_column('team', 'middle_2',
                    existing_type=sa.VARCHAR(),
                    type_=sa.Integer(),
                    existing_nullable=True)
    op.alter_column('team', 'libero',
                    existing_type=sa.VARCHAR(),
                    type_=sa.Integer(),
                    existing_nullable=True)
    op.create_foreign_key(None, 'team', 'user', ['middle_2'], ['id'])
    op.create_foreign_key(None, 'team', 'user', ['outside_1'], ['id'])
    op.create_foreign_key(None, 'team', 'user', ['outside_2'], ['id'])
    op.create_foreign_key(None, 'team', 'user', ['middle_1'], ['id'])
    op.create_foreign_key(None, 'team', 'user', ['opposite'], ['id'])
    op.create_foreign_key(None, 'team', 'user', ['setter'], ['id'])
    op.create_foreign_key(None, 'team', 'user', ['libero'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'team', type_='foreignkey')
    op.drop_constraint(None, 'team', type_='foreignkey')
    op.drop_constraint(None, 'team', type_='foreignkey')
    op.drop_constraint(None, 'team', type_='foreignkey')
    op.drop_constraint(None, 'team', type_='foreignkey')
    op.drop_constraint(None, 'team', type_='foreignkey')
    op.drop_constraint(None, 'team', type_='foreignkey')
    op.alter_column('team', 'libero',
                    existing_type=sa.Integer(),
                    type_=sa.VARCHAR(),
                    existing_nullable=True)
    op.alter_column('team', 'middle_2',
                    existing_type=sa.Integer(),
                    type_=sa.VARCHAR(),
                    existing_nullable=True)
    op.alter_column('team', 'middle_1',
                    existing_type=sa.Integer(),
                    type_=sa.VARCHAR(),
                    existing_nullable=True)
    op.alter_column('team', 'setter',
                    existing_type=sa.Integer(),
                    type_=sa.VARCHAR(),
                    existing_nullable=True)
    op.alter_column('team', 'outside_2',
                    existing_type=sa.Integer(),
                    type_=sa.VARCHAR(),
                    existing_nullable=True)
    op.alter_column('team', 'outside_1',
                    existing_type=sa.Integer(),
                    type_=sa.VARCHAR(),
                    existing_nullable=True)
    op.alter_column('team', 'opposite',
                    existing_type=sa.Integer(),
                    type_=sa.VARCHAR(),
                    existing_nullable=True)
    # ### end Alembic commands ###
